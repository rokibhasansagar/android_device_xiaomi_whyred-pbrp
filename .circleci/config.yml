version: 2.1
jobs:
  build:
    docker:
      - image: fr3akyphantom/alpine-docker-runner:latest
    environment:
      MANIFEST_BRANCH: 'android-10.0'
      VERSION: '2.9.1-test'
      MAINTAINER: "PBRP Team"
      VENDOR: 'xiaomi'
      CODENAME: 'whyred'
      FLAVOR: 'eng'
      TEST_BUILD: 'true'
      CHANGELOG: "Initial Build"
    working_directory: /home/builder/pitchblack
    steps:
      - setup_remote_docker:
          version: 19.03.8
      #- run:
          #name: Create Docker volumes
          #command: |
            #docker create --name input --volume /home/builder/base alpine:3.12 /bin/true
            #docker cp . input:/home/builder/base/
            #docker create --name output --volume /home/builder/pitchblack alpine:3.12 /bin/true
            #docker cp build.sh output:/home/builder/pitchblack/
      - run:
          command: |
            [ ! -d /home/builder/.ccache ] && mkdir -p /home/builder/.ccache
            docker pull fr3akyphantom/droid-builder:focal
            docker run --privileged --rm -i \
              -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) \
              -e GitHubMail=${GitHubMail} \
              -e GitHubName=${GitHubName} \
              -e GITHUB_TOKEN=${GITHUB_TOKEN} \
              -e CIRCLE_PROJECT_USERNAME=${CIRCLE_PROJECT_USERNAME} \
              -e CIRCLE_PROJECT_REPONAME=${CIRCLE_PROJECT_REPONAME} \
              -e CIRCLE_BRANCH=${CIRCLE_BRANCH} \
              -e CIRCLE_SHA1=${CIRCLE_SHA1} \
              -e MANIFEST_BRANCH=${MANIFEST_BRANCH} \
              -e VERSION=${VERSION} \
              -e MAINTAINER="${MAINTAINER}" \
              -e VENDOR=${VENDOR} \
              -e CODENAME=${CODENAME} \
              -e FLAVOR=${FLAVOR} \
              -e TEST_BUILD=${TEST_BUILD} \
              -e CHANGELOG="${CHANGELOG}" \
              -v "/home/builder/pitchblack:/home/builder/pitchblack/:rw,z" \
              -v "/home/builder/.ccache:/srv/ccache:rw" \
              fr3akyphantom/droid-builder:focal bash \<< EOF
            set -eo pipefail
            
            pwd
            
            JAVA_OPTS=${JAVA_OPTS:+" -Xmx8G "}
            
            # Set GitAuth Infos"
            git config --global user.email $GitHubMail
            git config --global user.name $GitHubName
            git config --global credential.helper store
            git config --global color.ui true
            
            curl -sL https://$GITHUB_TOKEN@github.com/$GitHubName/google-git-cookies/raw/master/setup_cookies.sh -o setup_cookies.sh
            bash setup_cookies.sh
            rm setup_cookies.sh
            
            echo -e "Starting the CI Build Process...\n"
            
            cd /home/builder/pitchblack

            mkdir -p /home/builder/pitchblack/work && cd work

            echo -e "Initializing PBRP repo sync..."
            repo init -u https://github.com/PitchBlackRecoveryProject/manifest_pb.git -b ${MANIFEST_BRANCH} --depth=1
            time repo sync -c --force-sync --no-clone-bundle --no-tags -j$(nproc --all)
            
            rm -rf vendor/pb && git clone --depth 1 https://github.com/PitchBlackRecoveryProject/vendor_pb.git -b "pb-10.0" vendor/pb
            rm vendor/pb/vendorsetup.sh
            
            echo -e "\nGetting the Device Tree on place"
            git clone https://$GITHUB_TOKEN@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} -b ${CIRCLE_BRANCH} device/${VENDOR}/${CODENAME}
            
            echo -e "\nPreparing Delicious Lunch..."
            export ALLOW_MISSING_DEPENDENCIES=true
            source build/envsetup.sh
            lunch omni_${CODENAME}-${FLAVOR}
            
            mka recoveryimage
            echo -e "\nYummy Recovery is Served.\n"
            echo "Ready to Deploy"
            export TEST_BUILDFILE=$(find /home/builder/out/target/product/${CODENAME}/PitchBlack*-UNOFFICIAL.zip 2>/dev/null)
            export UPLOAD_PATH=/home/builder/out/target/product/${CODENAME}/upload/

            mkdir ${UPLOAD_PATH}
            
            if [[ $TEST_BUILD == 'true' ]] && [[ -n $TEST_BUILDFILE ]]; then
              echo "Got the Unofficial Build: $TEST_BUILDFILE"
              cp $TEST_BUILDFILE $UPLOAD_PATH
              export TEST_BUILDIMG=$(find /home/builder/out/target/product/${CODENAME}/recovery.img 2>/dev/null)
              cp $TEST_BUILDIMG $UPLOAD_PATH
              ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -n "Test Release for $(echo $CODENAME)" -b "PBRP $(echo $VERSION)" -c ${CIRCLE_SHA1} -delete ${VERSION}-test ${UPLOAD_PATH}
            fi
            
            echo -e "\n\nAll Done Gracefully\n\n"
            EOF
          name: AIO Build

workflows:
  version: 2
  all_builder:
    jobs:
      - build:
          filters:
            branches:
              only: "android-10.0"
          context: personal-envs
