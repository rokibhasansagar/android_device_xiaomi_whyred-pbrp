version: 2.1
jobs:
  build:
    docker:
      - image: fr3akyphantom/droid-runner:latest
    environment:
      MANIFEST_BRANCH: 'android-10.0'
      VERSION: '2.9.2-test'
      MAINTAINER: "PBRP Team"
      VENDOR: 'xiaomi'
      CODENAME: 'whyred'
      FLAVOR: 'eng'
      TEST_BUILD: 'true'
      PB_ENGLISH: 'true'
      CHANGELOG: |
        - Initial Build with Android-10 Source
        - Used Q Kernel prebuilt from Ancient-Project
        - Use COMMON_LUNCH_CHOICES instead of vendorsetup
        - Fix recovery.fstab inclusion
        - Modify build product configuration
        - Remove prebuilt *.so binary from sbin, they are built from source
      # EXTRA_CMD: "rm -f device/${VENDOR}/${CODENAME}/recovery/root/sbin/*.so"
    working_directory: /home/builder
    steps:
      - run:
          name: "CREATE KEEP-ALIVE SHELL"
          command: |
            [[ ! -d /tmp ]] && mkdir /tmp
            cat \<< EOF > /tmp/act.sh
            #!/bin/bash
            echo "\$$" > /tmp/act.pid
            while true; do
              echo "." && sleep 300
            done
            EOF
            chmod a+x /tmp/act.sh
      - setup_remote_docker:
          version: 19.03.8
      - run:
          name: "ALL IN REMOTE"
          command: |
            [[ ! -d /home/builder/.ccache ]] && mkdir -p /home/builder/.ccache
            cd /home/builder
            mkdir android && cd android
            /tmp/act.sh & docker run --privileged -i --name worker \
              -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) \
              -e GitHubMail="${GitHubMail}" -e GitHubName="${GitHubName}" -e GITHUB_TOKEN="${GITHUB_TOKEN}" \
              -e CIRCLE_PROJECT_USERNAME="${CIRCLE_PROJECT_USERNAME}" -e CIRCLE_PROJECT_REPONAME="${CIRCLE_PROJECT_REPONAME}" \
              -e CIRCLE_BRANCH="${CIRCLE_BRANCH}" -e CIRCLE_SHA1="${CIRCLE_SHA1}" \
              -e MANIFEST_BRANCH="${MANIFEST_BRANCH}" -e PBRP_BRANCH="${PBRP_BRANCH}" \
              -e USE_SECRET_BOOTABLE="${USE_SECRET_BOOTABLE}" -e SECRET_BR="${SECRET_BR}" \
              -e VERSION="${VERSION}" -e VENDOR="${VENDOR}" -e CODENAME="${CODENAME}" \
              -e BUILD_LUNCH="${BUILD_LUNCH}" -e FLAVOR="${FLAVOR}" \
              -e MAINTAINER="${MAINTAINER}" -e CHANGELOG="${CHANGELOG}" \
              -e TEST_BUILD="${TEST_BUILD}" -e PB_OFFICIAL="${PB_OFFICIAL}" \
              -e PB_ENGLISH="${PB_ENGLISH}" -e EXTRA_CMD="${EXTRA_CMD}" \
              -v "/home/builder/:/home/builder/:rw,z" \
              -v "${pwd}:/home/builder/android/:rw,z" \
              -v "/home/builder/.ccache:/srv/ccache:rw" \
              --workdir /home/builder \
              fr3akyphantom/droid-builder:focal bash \<< EOF
            set -xe
            whoami
            uname -a
            
            cd /home/builder
            mkdir android && cd android
            # Set GitAuth Infos"
            git config --global user.email $GitHubMail
            git config --global user.name $GitHubName
            git config --global credential.helper store
            git config --global color.ui true
            # Use Google Git Cookies for Smooth repo-sync
            git clone -q "https://$GITHUB_TOKEN@github.com/$GitHubName/google-git-cookies.git" &> /dev/null
            bash google-git-cookies/setup_cookies.sh
            rm -rf google-git-cookies
            # threads
            THREADCOUNT="$(nproc --all)" && export THREADCOUNT
            if [[ "$THREADCOUNT" -gt 8 ]]; then MAKEJOB="$THREADCOUNT"
            elif [[ "$THREADCOUNT" -gt 4 ]] && [[ "$THREADCOUNT" -lt 8 ]]; then MAKEJOB=8
            elif [[ "$THREADCOUNT" -eq 4 ]]; then MAKEJOB="$THREADCOUNT"
            elif [[ "$THREADCOUNT" -eq 2 ]]; then MAKEJOB=4
            fi
            echo "$MAKEJOB"
            # sync
            echo -e "Initializing PBRP repo sync..."
            repo init -q -u https://github.com/PitchBlackRecoveryProject/manifest_pb.git -b ${MANIFEST_BRANCH} --depth 1
            /tmp/act.sh & repo sync -c -q --force-sync --no-clone-bundle --no-tags -j${MAKEJOB}
            # clean unneeded files
            rm -rf development/apps/ development/samples/ packages/apps/
            # use pb-10.0
            rm -rf vendor/pb && git clone https://github.com/PitchBlackRecoveryProject/vendor_pb -b pb-10.0 --depth 1 vendor/pb
            rm vendor/pb/vendorsetup.sh
            if [[ -n ${USE_SECRET_BOOTABLE} ]]; then
              [[ -n ${PBRP_BRANCH} ]] && unset PBRP_BRANCH
              [[ -z ${SECRET_BR} ]] && SECRET_BR="android-9.0"
              rm -rf bootable/recovery
              git clone --quiet --progress https://$GitHubName:$GITHUB_TOKEN@github.com/PitchBlackRecoveryProject/pbrp_recovery_secrets -b ${SECRET_BR} --single-branch bootable/recovery
            elif [[ -n ${PBRP_BRANCH} ]]; then
              rm -rf bootable/recovery
              git clone --quiet --progress https://github.com/PitchBlackRecoveryProject/android_bootable_recovery -b ${PBRP_BRANCH} --single-branch bootable/recovery
            fi
            echo -e "\nGetting the Device Tree on place"
            if [[ "${CIRCLE_PROJECT_USERNAME}" == "PitchBlackRecoveryProject" ]]; then
              git clone --quiet --progress https://$GitHubName:$GITHUB_TOKEN@github.com/PitchBlackRecoveryProject/${CIRCLE_PROJECT_REPONAME} -b ${CIRCLE_BRANCH} device/${VENDOR}/${CODENAME}
            else
              git clone https://$GITHUB_TOKEN@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} -b ${CIRCLE_BRANCH} device/${VENDOR}/${CODENAME}
            fi
            ls -lA .
            if [[ -n $EXTRA_CMD ]]; then
              eval "$EXTRA_CMD"
              cd /home/builder/android/
            fi
            JAVA_OPTS=${JAVA_OPTS:+" -Xmx8G "}
            echo -en "Current Username is - " && whoami
            echo -e "\nPreparing Delicious Lunch..."
            export ALLOW_MISSING_DEPENDENCIES=true
            source build/envsetup.sh
            if [[ -n $BUILD_LUNCH ]]; then
              lunch ${BUILD_LUNCH}
            elif [[ -n $FLAVOR ]]; then
              lunch omni_${CODENAME}-${FLAVOR}
            fi
            make -j${MAKEJOB} recoveryimage
            echo -e "\nYummy Recovery is Served.\n"
            # deploy
            export TEST_BUILDFILE=out/target/product/${CODENAME}/PitchBlack*-UNOFFICIAL.zip
            export TEST_BUILDIMG=out/target/product/${CODENAME}/recovery.img
            mkdir upload
            cp ${TEST_BUILDFILE} ${TEST_BUILDIMG} upload/
            # release
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -n "Test Release for $(echo $CODENAME)" -b "PBRP $(echo $VERSION)" -c ${CIRCLE_SHA1} -delete ${VERSION}-test upload/
            echo -e "\n\nAll Done Gracefully\n\n"
            EOF
            echo -en "act-shell pid number is - " && cat /tmp/act.pid
            ACTPID=$(cat /tmp/act.pid) && kill -s SIGTERM ${ACTPID}

workflows:
  version: 2
  all_builder:
    jobs:
      - build:
          filters:
            branches:
              only: "android-10.0-remote"
          context: personal-envs
